resource "digitalocean_droplet" "{{name}}" {
    image = {{{imageText}}}
    name = "{{name}}"
    region = "nyc1"
    size = "4gb"
    private_networking = true
    ssh_keys = [
        "${var.ssh_fingerprint}"
    ]

    connection {
        user = "root"
        type = "ssh"
        private_key = "${file(var.pvt_key)}"
        timeout = "2m"
    }

    provisioner "remote-exec" {
        inline = [
            "mkdir -p /etc/consul.d/ssl"
        ]
    }

    provisioner "file" {
        source = "consul.cert"
        destination = "/etc/consul.d/ssl/consul.cert"
    }

    provisioner "file" {
            source = "consul.key"
            destination = "/etc/consul.d/ssl/consul.key"
    }

    provisioner "file" {
            source = "ca.cert"
            destination = "/etc/consul.d/ssl/ca.cert"
    }

    provisioner "file" {
            source = "vault.cert"
            destination = "/etc/consul.d/ssl/vault.cert"
    }

    provisioner "file" {
            source = "vault.key"
            destination = "/etc/consul.d/ssl/vault.key"
    }

    # Pass the Digital Ocean key to the newly created instance and store in the DO_KEY file
    # The encrypted value is created using the public key from the root user on the image (es15d3-cd-ci-active-id_rsa.pem.pub)
    provisioner "remote-exec" {
        inline = [
            "canzea -v --reset"
        ]
    }

}
