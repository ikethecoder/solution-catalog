{
  "id": "c62e6955.0892d8",
  "label": "Environments",
  "nodes": [
    {
      "id": "b3ff6fb2.c48b3",
      "type": "inject",
      "z": "c62e6955.0892d8",
      "name": "",
      "topic": "",
      "payload": "",
      "payloadType": "date",
      "repeat": "",
      "crontab": "",
      "once": false,
      "x": 123,
      "y": 121,
      "wires": [
        [
          "ebcef51a.0b14c8"
        ]
      ]
    },
    {
      "id": "ebcef51a.0b14c8",
      "type": "function",
      "z": "c62e6955.0892d8",
      "name": "Prepare GET Environment",
      "func": "pl = msg.payload;\nname = pl.name;\nmsg0 = {\"payload\":{\"name\":name}, \"filename\":\"/tmp/environments-\" + name + \".json\"};\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\":\"environments\",\n        \"name\":\"Integration\",\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=get-object --args='\" + argsString + \"'\";\n\nreturn [msg0, msg];\n\n",
      "outputs": "2",
      "noerr": 0,
      "x": 376.5,
      "y": 115,
      "wires": [
        [

        ],
        [
          "2e8347e8.6f5b58"
        ]
      ]
    },
    {
      "id": "38e90484.305cbc",
      "type": "inject",
      "z": "c62e6955.0892d8",
      "name": "",
      "topic": "",
      "payload": "",
      "payloadType": "date",
      "repeat": "",
      "crontab": "",
      "once": false,
      "x": 112,
      "y": 242,
      "wires": [
        [
          "923a61ca.f467d"
        ]
      ]
    },
    {
      "id": "923a61ca.f467d",
      "type": "function",
      "z": "c62e6955.0892d8",
      "name": "Prepare PUT Environment",
      "func": "pl = msg.payload;\nname = pl.name;\nmsg0 = {\"payload\":{\"name\":name}, \"filename\":\"/tmp/environments-\" + name + \".json\"};\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\":\"environments\",\n        \"name\":\"Integration\",\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=put-object --args='\" + argsString + \"'\";\n\nreturn [msg0, msg];\n\n",
      "outputs": "2",
      "noerr": 0,
      "x": 365.5,
      "y": 236,
      "wires": [
        [

        ],
        [
          "54483dff.6c6af4"
        ]
      ]
    },
    {
      "id": "54483dff.6c6af4",
      "type": "bigexec",
      "z": "c62e6955.0892d8",
      "name": "",
      "command": "/home/pm2user/canzea.sh",
      "commandArgs": "",
      "minError": 1,
      "minWarning": 1,
      "cwd": "/home/pm2user/.ecosystem-catalog/catalog",
      "shell": "",
      "extraArgumentProperty": "",
      "envProperty": "",
      "format": "utf8",
      "limiter": true,
      "payloadIs": "argumentNoStdin",
      "x": 593.5,
      "y": 239,
      "wires": [
        [

        ],
        [

        ],
        [

        ]
      ]
    },
    {
      "id": "2e8347e8.6f5b58",
      "type": "bigexec",
      "z": "c62e6955.0892d8",
      "name": "",
      "command": "/home/pm2user/canzea.sh",
      "commandArgs": "",
      "minError": 1,
      "minWarning": 1,
      "cwd": "/home/pm2user/.ecosystem-catalog/catalog",
      "shell": "",
      "extraArgumentProperty": "",
      "envProperty": "",
      "format": "utf8",
      "limiter": true,
      "payloadIs": "argumentNoStdin",
      "x": 604.5,
      "y": 118,
      "wires": [
        [

        ],
        [

        ],
        [

        ]
      ]
    }
  ]
}