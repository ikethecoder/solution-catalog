{
  "resources": [
    {
      "building_block": {
        "docker": {
          "role": "container",
          "solution": "docker",
          "droplet" : "${instanceName}",
          "commands" : true
        }
      }
    },
    {
      "building_block": {
        "ruby": {
          "role": "workarounds",
          "solution": "ruby",
          "droplet" : "${instanceName}",
          "commands" : true
        }
      }
    },
    {
      "building_block": {
        "ruby-gems": {
          "role": "workarounds",
          "solution": "ruby-gems",
          "droplet" : "${instanceName}",
          "commands" : true
        }
      }
    },
    {
      "building_block": {
        "git-core": {
          "role": "sourcecontrol",
          "solution": "git-core",
          "droplet" : "${instanceName}",
          "commands" : true
        }
      }
    },

    {
      "building_block": {
        "cloud-profile-r2": {
          "role": "workarounds",
          "solution": "cloud-profile-r2",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "canzea": {
          "role": "workarounds",
          "solution": "canzea",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "selinux": {
          "role": "workarounds",
          "solution": "selinux",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },

    {
      "building_block": {
        "java": {
          "role": "virtualmachine",
          "solution": "java",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "filebeat": {
          "role": "monitoring",
          "solution": "filebeat",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "metricbeat": {
          "role": "monitoring",
          "solution": "metricbeat",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "auditd": {
          "role": "audit",
          "solution": "auditd",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "golang": {
          "role": "workarounds",
          "solution": "golang",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "mongodb": {
          "role": "documentdatabase",
          "solution": "mongodb",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "nginx": {
          "role": "loadbalancer",
          "solution": "nginx",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "rabbitmq": {
          "role": "messaging",
          "solution": "rabbitmq",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "fabio": {
          "role": "router",
          "solution": "fabio",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "nginx": {
          "role": "workarounds",
          "solution": "sudoers",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "gocd-agent": {
          "role": "deploy",
          "solution": "gocd-agent",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "building_block": {
        "maven": {
          "role": "build",
          "solution": "maven",
          "droplet" : "${instanceName}",
          "commands" : false
        }
      }
    },
    {
      "pipeline_environment": {
        "${environmentLabel}": {
        }
      }
    },

    {
      "pipeline_agent": {
        "${instanceName}": {
          "agent" : "${instanceName}",
          "environment" : "${environmentLabel}"
        }
      }
    },

    {
      "collaboration_channel" : {
        "${environmentLabel}": {}
      }
    },

    {
      "boot:user_config": {
        "go": {
          "wire" : "users:configure-go",
          "instance" : "${instanceId}",
          "privateKey" : "master_key"
        }
      }
    }

  ]
}
