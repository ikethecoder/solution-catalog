---
variables:
  cloud_provider: ""
  auth: ""
  blueprint: ""
  cloud_auth_id: ""
resources:
- digitalocean_volume:
    working:
      environment: "${environment.name}"
      droplet: "${instance.name}"
      size: 50
      region: "nyc1"
      description: "Working Storage for ${es.id}"
- building_block:
    ${instanceId}-digitalocean-volume-working:
      role: "na"
      solution: "digitalocean/digitalocean_volume"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-docker:
      role: "container"
      solution: "docker"
      droplet: "${instanceName}"
      commands: true
  depends_on:
  - "compute_instance.${instanceName}"
- building_block:
    ${instanceId}-ruby-min:
      role: "workarounds"
      solution: "ruby-min"
      droplet: "${instanceName}"
      commands: true
  depends_on:
  - "#previous"
- building_block:
    ${instanceId}-git-core:
      role: "sourcecontrol"
      solution: "git-core"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-canzea-min:
      role: "workarounds"
      solution: "canzea-min"
      droplet: "${instanceName}"
      def_catalog_branch: "${es.catalog.branch}"
      commands: false
- building_block:
    ${instanceId}-cloud-profile-r2:
      role: "workarounds"
      solution: "cloud-profile-r2"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-canzea:
      role: "workarounds"
      solution: "canzea"
      droplet: "${instanceName}"
      def_catalog_branch: "${es.catalog.branch}"
      commands: false
- building_block:
    ${instanceId}-selinux:
      role: "workarounds"
      solution: "selinux"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-consul:
      role: "configdb"
      solution: "consul/docker"
      droplet: "${instance.name}"
      commands: false
- building_block:
    ${instanceId}-vault:
      role: "keymgmt"
      solution: "vault/docker"
      droplet: "${instance.name}"
      commands: false
- building_block:
    ${instanceId}-ecosystem-bootstrap-r2:
      role: "workarounds"
      solution: "ecosystem-bootstrap-r2"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-flows-gateway:
      role: "adhoc"
      solution: "flows-gateway/docker"
      droplet: "${instanceName}"
      commands: false
- tls_key_pair:
    hashicorp-ca:
      files:
      - "ca.cert"
    consul-tls:
      files:
      - "consul.cert"
      - "consul.key"
    vault-tls:
      files:
      - "vault.cert"
      - "vault.key"
- building_block:
    ${instanceId}-unzip:
      role: "workarounds"
      solution: "zip"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-hashicorpvault-cli:
      role: "keymgmt"
      solution: "hashicorpvault-cli"
      droplet: "${instanceName}"
      commands: false
- vault_secret:
    service/vault:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      wire: "ecosystem:register-secret-flows-gateway"
- building_block:
    ${instanceId}-nginx:
      role: "loadbalancer"
      solution: "nginx/docker"
      droplet: "${instanceName}"
      commands: false
- proxy_ssl_virtual_host:
    default:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      domainName: "${es.fqdn}"
      domains: "${es.fqdn}"
      certname: "${es.fqdn}"
      email: "${owner.email}"
- proxy_service:
    flows-gateway/gw:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      proxy_ssl_virtual_host: "default"
      location: "/gw/"
      passthrough: "http://localhost:8000"
- proxy_service:
    flows-gateway/gwadmin:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      proxy_ssl_virtual_host: "default"
      location: "/gwadmin/"
      passthrough: "http://localhost:8000"
- proxy_service:
    flows-gateway/wetty:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      proxy_ssl_virtual_host: "default"
      location: "/wetty/"
      passthrough: "http://localhost:8000"
- proxy_service:
    flows-gateway/shell:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      proxy_ssl_virtual_host: "default"
      location: "/shell/"
      passthrough: "http://localhost:8000"

- proxy_ssl_virtual_host:
    sc:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      domainName: "sc.${es.fqdn}"
      domains: "sc.${es.fqdn}"
      certname: "sc.${es.fqdn}"
      email: "${owner.email}"

- proxy_service:
    sc:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      proxy_ssl_virtual_host: "sc"
      location: "/"
      passthrough: "http://localhost:11080/"

- proxy_ssl_virtual_host:
    vault:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      domainName: "vault.${es.fqdn}"
      domains: "vault.${es.fqdn}"
      certname: "vault.${es.fqdn}"
      email: "${owner.email}"

- proxy_service:
    vault:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      proxy_ssl_virtual_host: "vault"
      location: "/"
      passthrough: "https://vault.service.dc1.consul:8200"
      template: "vault.tmpl"

- vault_secret:
    oauth/clients/saas_express:
      wire: "vault:register-secret"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      key: "oauth/clients/0000-0000-0000-0001"
      data:
        label: "Canzea SaaS Express"
        client_secret: "1111-0000-0000-0001"
        accessTokenLifetime: 14515200
        grants:
        - "password"
        - "authorization_code"
        - "refresh_token"
        redirectUris:
        - "https://canzea.com/saas/_oauth/callback"
- boot:ecosystem_user:
    saas_express_user:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      data:
        password: "1234"
        email: "${owner.email}"
- auto_auth:
    applications/flows_gateway:
      client_id: "0000-0000-0000-0001"
      client_secret: "1111-0000-0000-0001"
      username: "saas_express_user"
      password: "1234"

- canzea_gateway_flow:
    all:
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      source: "flows/r3"

- building_block:
    ${instanceId}-postgres:
      role: "na"
      solution: "postgres/docker"
      droplet: "${instanceName}"
      commands: false

- building_block:
    ${instanceId}-gitea:
      role: "sourcecontrol"
      solution: "gitea/docker"
      droplet: "${instanceName}"
      commands: false

- boot:first-config:
    gitea:
      wire: "gitea:first-config"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"

- boot:first-login:
    gitea:
      wire: "gitea:first-login"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"

- boot:first-set-oauth:
    gitea:
      wire: "gitea:first-set-oauth"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"

- vault_secret:
    nodered/canzea_console:
      wire: "vault:register-secret"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      key: "nodered/canzea_console"
      data:
        token: "${secrets['applications/flows_gateway'].token}"

- source_control_token:
    admin:
      wire: "ecosystem-resources:process-resources"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      saveData: true
      resources:
      - source_control_token:
          esadmin:
            Name: "access_token"

- vault_token:
    gitea/root:
      wire: "ecosystem-resources:process-resources"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      resources:
      - vault_secret:
          gitea/root:
            token: "${db['source_control_token-esadmin'].sha1}"
            host: "sc.${es.fqdn}"

- source_control_repository:
    ecosystems:
      wire: "ecosystem-resources:process-resources"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      resources:
      - source_control_repository:
          ecosystems: {}

- ssh_key:
    esadmin_ecosystem: {}

- boot:restart:
    ${instanceId}-flows-gateway:
      wire: "nodered:restart"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"

- source_control_public_key:
    rpk:
      wire: "ecosystem-resources:process-resources"
      environment: "cd"
      serverNumber: 1
      segment: "ci"
      privateKey: "master_key"
      resources:
      - source_control_public_key:
          esadmin/rpk:
            title: "esadmin_pk"
            key: "${db['esadmin_ecosystem'].public}"

- migrate:
    ecosystem:
      ecosystem: "${es.id}"
      fqdn: "${es.fqdn}"
      sourcePath: "sc/ecosystems/${es.id}"

- remote_ssh_key_pair:
    root_id_rsa: {}

- vault_secret:
    shell/commands/${instanceId}-bash:
      user: "root"
      host: "${d}{ecosystem.lookupInstanceByName('${instanceId}').privateIp}"
      auth: "publickey"
      identity: "/home/pm2user/ssl/keys/root_id_rsa"
      command: "bash"
      interactive: true

- vault_policy:
    all:
      path:
        secret/*:
          capabilities:
          - "create"
          - "read"
          - "update"
          - "delete"
          - "list"

- vault_secret:
    users/${owner.username}:
      email: "${owner.email}"

- vault_user:
    ${owner.username}:
      password: "${utils.randomPassword}"
      policies: "all"

- building_block:
    ${instance.id}-minio:
      role: "na"
      solution: "minio/docker"
      droplet: "${instance.name}"
      commands: false

- building_block:
    ${instanceId}-mosquitto:
      role: "mqtt_message_broker"
      solution: "mosquitto/docker"
      droplet: "${instance.name}"
      commands: false

- building_block:
    ${instanceId}-keycloak:
      role: "na"
      solution: "keycloak/docker"
      droplet: "${instance.name}"
      commands: false

- wire:
    ${instanceId}-keycloak-first-config:
      solution: keycloak
      action: first-config
      droplet: "${es.tag}-cd-ci-01"

- wire:
    ${instanceId}-upgrade-to-oidc:
      solution: flows-gateway
      action: upgrade-to-oidc
      droplet: "${es.tag}-cd-ci-01"

- wire:
    ${instanceId}-consul-component-folder:
      solution: consul
      action: first-set-component
      droplet: "${es.tag}-cd-ci-01"

- building_block:
    ${instanceId}-consul-oidc-proxy:
      role: "na"
      solution: "consul/oidc-proxy"
      droplet: "${instance.name}"
      commands: false

- legacy:
    fill-endpoints:
      activity: vs:fill-endpoints
  depends_on:
  - "migrate.ecosystem"

