---
resources:
- vault_secret:
    shell/commands/${instanceId}-bash:
      user: "root"
      host: "${d}{ecosystem.lookupInstanceByName('${instanceId}').privateIp}"
      auth: "publickey"
      identity: "/home/pm2user/ssl/keys/root_id_rsa"
      command: "bash"
      interactive: true
  depends_on:
  - "compute_instance.${instanceName}"
- building_block:
    ${instanceId}-docker:
      role: "container"
      solution: "docker"
      droplet: "${instanceName}"
      commands: true
  depends_on:
  - "#previous"
- building_block:
    ${instanceId}-ruby:
      role: "workarounds"
      solution: "ruby-min"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-git-core:
      role: "sourcecontrol"
      solution: "git-core"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-cloud-profile-r2:
      role: "workarounds"
      solution: "cloud-profile-r2"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-canzea:
      role: "workarounds"
      solution: "canzea"
      droplet: "${instanceName}"
      def_catalog_branch: "${es.catalog.branch}"
      commands: false
- building_block:
    ${instanceId}-selinux:
      role: "workarounds"
      solution: "selinux"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-java:
      role: "virtualmachine"
      solution: "java"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-sshd:
      role: "workarounds"
      solution: "sshd"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-canzea-upgrade:
      role: "workarounds"
      solution: "canzea-upgrade"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-filebeat:
      role: "monitoring"
      solution: "filebeat"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-metricbeat:
      role: "monitoring"
      solution: "metricbeat"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-auditd:
      role: "audit"
      solution: "auditd"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-golang:
      role: "workarounds"
      solution: "golang"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-networks-nc:
      role: "tools"
      solution: "nc"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-gocd-agent:
      role: "deploy"
      solution: "gocd-agent/docker"
      droplet: "${instanceName}"
      commands: false
  depends_on:
  - "service_discovery_service.gocd"
  - "building_block.${instance.id}-golang"
- wire:
    ${instanceId}-go:
      solution: "users"
      action: "configure-go"
      droplet: "${instanceName}"
  depends_on:
  - "building_block.${instance.id}-gocd-agent"
- building_block:
    ${instanceId}-maven:
      role: "build"
      solution: "maven"
      droplet: "${instanceName}"
      commands: false
- wire:
    gocd-agent-set-registry-creds:
      solution: gocd-agent
      action: set-registry-creds
      droplet: "${instance.name}"
- pipeline_environment:
    ${environmentLabel}: {}
  depends_on:
  - "service_discovery_service.gocd"
  - "building_block.${instance.id}-gocd-agent"
- pipeline_agent:
    ${instanceName}:
      agent: "${instanceName}"
      environment: "${environmentLabel}"
  depends_on:
  - "service_discovery_service.gocd"
  - "building_block.${instance.id}-gocd-agent"
- building_block:
    ${instanceId}-mongodb:
      role: "documentdatabase"
      solution: "mongodb/vm"
      droplet: "${instanceName}"
      commands: false
  depends_on:
  - "building_block.${instanceId}-maven"
- building_block:
    ${instanceId}-nginx:
      role: "loadbalancer"
      solution: "nginx/docker"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-rabbitmq:
      role: "messaging"
      solution: "rabbitmq/docker"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-sudoers:
      role: "workarounds"
      solution: "sudoers"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-securerandom:
      role: "workarounds"
      solution: "securerandom"
      droplet: "${instanceName}"
      commands: false
- collaboration_channel:
    ${environmentLabel}: {}
  depends_on:
  - "wire.rocketchat-first-set-oauth"
- monitoring_dashboard:
    ${environmentLabel}-environment:
      blueprint: "web-services"
      template: "monitoring_dashboard-integration-environment"
      title: "${environmentLabel} Environment"
      description: "System Metrics for the ${environmentLabel}"
  depends_on:
  - "service_discovery_service.mon-mon-01-grafana"
