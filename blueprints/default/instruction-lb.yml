---
resources:
- building_block:
    ${instanceId}-docker:
      role: "container"
      solution: "docker"
      droplet: "${instanceName}"
      commands: true
  depends_on:
  - "compute_instance.${instanceName}"
- vault_secret:
    shell/commands/${instanceId}-bash:
      user: "root"
      host: "${d}{ecosystem.lookupInstanceByName('${instanceId}').privateIp}"
      auth: "publickey"
      identity: "/home/pm2user/ssl/keys/root_id_rsa"
      command: "bash"
      interactive: true
- building_block:
    ${instanceId}-ruby-min:
      role: "workarounds"
      solution: "ruby-min"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-git-core:
      role: "sourcecontrol"
      solution: "git-core"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-cloud-profile-r2:
      role: "workarounds"
      solution: "cloud-profile-r2"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-canzea:
      role: "workarounds"
      solution: "canzea"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-selinux:
      role: "workarounds"
      solution: "selinux"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-auditd:
      role: "audit"
      solution: "auditd"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-sshd:
      role: "workarounds"
      solution: "sshd"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-canzea-upgrade:
      role: "workarounds"
      solution: "canzea-upgrade"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-golang:
      role: "workarounds"
      solution: "golang"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-fabio:
      role: "router"
      solution: "fabio/vm"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-nginx:
      role: "loadbalancer"
      solution: "nginx/docker"
      droplet: "${instanceName}"
      commands: false
