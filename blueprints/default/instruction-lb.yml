---
resources:
- building_block:
    ${instanceId}-docker:
      role: "container"
      solution: "docker"
      droplet: "${instanceName}"
      commands: true
  depends_on:
  - "compute_instance.${instanceName}"
- vault_secret:
    shell/commands/${instanceId}-bash:
      user: "root"
      host: "${d}{ecosystem.lookupInstanceByName('${instanceId}').privateIp}"
      auth: "publickey"
      identity: "/home/pm2user/ssl/keys/root_id_rsa"
      command: "bash"
      interactive: true
  depends_on:
  - "#previous"
- building_block:
    ${instanceId}-ruby-min:
      role: "workarounds"
      solution: "ruby-min"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-git-core:
      role: "sourcecontrol"
      solution: "git-core"
      droplet: "${instanceName}"
      commands: true
- building_block:
    ${instanceId}-cloud-profile-r2:
      role: "workarounds"
      solution: "cloud-profile-r2"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-canzea:
      role: "workarounds"
      solution: "canzea"
      droplet: "${instanceName}"
      def_catalog_branch: "${es.catalog.branch}"
      commands: false
- building_block:
    ${instanceId}-selinux:
      role: "workarounds"
      solution: "selinux"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-auditd:
      role: "audit"
      solution: "auditd"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-sshd:
      role: "workarounds"
      solution: "sshd"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-canzea-upgrade:
      role: "workarounds"
      solution: "canzea-upgrade"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-golang:
      role: "workarounds"
      solution: "golang"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-fabio:
      role: "router"
      solution: "fabio/vm"
      droplet: "${instanceName}"
      commands: false
- building_block:
    ${instanceId}-nginx:
      role: "loadbalancer"
      solution: "nginx/docker"
      droplet: "${instanceName}"
      commands: false

- digitalocean_dns:
    ${environment.id}:
      environment: cd
      droplet: ${es.tag}-cd-ci-01
      domain-id: "${es.fqdn_id}"
      domain: "${es.fqdn}"
      a:
        name: "${environment.id}"
        address: "${d}{var.compute_instance.${instance.name}.publicIp}"

- proxy_ssl_virtual_host:
    ${environment.id}:
      environment: ${environment.id}
      serverNumber: 1
      segment: ${segment.id}
      privateKey: "master_key"
      domainName: "${environment.id}.${es.fqdn}"
      domains: "${environment.id}.${es.fqdn}"
      certname: "${environment.id}.${es.fqdn}"
      email: "${owner.email}"

- proxy_service:
    ${environment.id}:
      environment: "${environment.id}"
      serverNumber: 1
      segment: ${segment.id}
      privateKey: "master_key"
      proxy_ssl_virtual_host: "${environment.id}"
      location: "/"
      passthrough: "http://${d}{var.compute_instance.${instance.name}.privateIp}:9998"

- service_endpoint:
    ${instance.id}-${environment.id}:
      service: gw-${environment.id}
      instance: ${instance.id}
      environment: ${environment.id}
      segment: ${segment.id}
      type: console
      secure: "https://${environment.id}.${es.fqdn}"