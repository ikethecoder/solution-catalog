{
  "id": "a1cb3587.05ca68",
  "type": "subflow",
  "name": "Go.CD Pipelines v1",
  "info": "",
  "in": [
    {
      "x": 50,
      "y": 30,
      "wires": [
        {
          "id": "68568a1e.58a984"
        }
      ]
    }
  ],
  "out": [
    {
      "x": 1154,
      "y": 507,
      "wires": [
        {
          "id": "6ec8b063.eb31a",
          "port": 0
        },
        {
          "id": "c82394d4.3bd098",
          "port": 0
        },
        {
          "id": "62f08c58.9168b4",
          "port": 0
        },
        {
          "id": "6a21d3e1.de7c0c",
          "port": 0
        }
      ]
    },
    {
      "x": 749,
      "y": 54,
      "wires": [
        {
          "id": "db80eee6.42424",
          "port": 0
        }
      ]
    }
  ],
  "configs": [

  ],
  "nodes": [
    {
      "id": "9feb67be.1e39d8",
      "type": "switch",
      "z": "a1cb3587.05ca68",
      "name": "",
      "property": "control.state",
      "propertyType": "msg",
      "rules": [
        {
          "t": "eq",
          "v": "start",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "running",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "end",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "error",
          "vt": "str"
        }
      ],
      "checkall": "false",
      "outputs": 4,
      "x": 705.5,
      "y": 296,
      "wires": [
        [

        ],
        [

        ],
        [
          "6ec8b063.eb31a"
        ],
        [
          "c82394d4.3bd098"
        ]
      ]
    },
    {
      "id": "5ca32374.a6013c",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Prepare GET",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\": \"pipelines\",\n        \"name\": pl.name + \"-\" + pl.branch + \"-Build\"\n    }\n};\n\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=get-object --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 309.5,
      "y": 250,
      "wires": [
        [
          "ec0f5e65.28ec4"
        ]
      ]
    },
    {
      "id": "28da27c6.08b1d8",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "create-build-pipeline",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\":\"pipelines\",\n        \"name\": pl.pipelineName\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=post-object --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 320,
      "y": 340,
      "wires": [
        [
          "9ad44d91.13f87"
        ]
      ]
    },
    {
      "id": "9ad44d91.13f87",
      "type": "bigexec",
      "z": "a1cb3587.05ca68",
      "name": "",
      "command": "/home/pm2user/canzea.sh",
      "commandArgs": "",
      "minError": 1,
      "minWarning": 1,
      "cwd": "/home/pm2user/.ecosystem-catalog/catalog",
      "shell": "",
      "extraArgumentProperty": "",
      "envProperty": "",
      "format": "utf8",
      "limiter": true,
      "payloadIs": "argumentNoStdin",
      "x": 478.5,
      "y": 329,
      "wires": [
        [
          "dd651a31.1779b8"
        ],
        [
          "9feb67be.1e39d8"
        ],
        [
          "dd651a31.1779b8"
        ]
      ]
    },
    {
      "id": "79cc2dd2.2e9744",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Prepare UNPAUSE",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"name\": pl.pipelineName\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=unpause --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 297.5,
      "y": 439,
      "wires": [
        [
          "a9ff3c48.849d5"
        ]
      ]
    },
    {
      "id": "a9ff3c48.849d5",
      "type": "bigexec",
      "z": "a1cb3587.05ca68",
      "name": "",
      "command": "/home/pm2user/canzea.sh",
      "commandArgs": "",
      "minError": 1,
      "minWarning": 1,
      "cwd": "/home/pm2user/.ecosystem-catalog/catalog",
      "shell": "",
      "extraArgumentProperty": "",
      "envProperty": "",
      "format": "utf8",
      "limiter": true,
      "payloadIs": "argumentNoStdin",
      "x": 501.5,
      "y": 445,
      "wires": [
        [

        ],
        [
          "9feb67be.1e39d8"
        ],
        [

        ]
      ]
    },
    {
      "id": "cc918e27.33987",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Prepare Add to Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\":\"environments\",\n        \"name\": pl.environment,\n        \"pipelineName\": pl.pipelineName\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=add-pipeline-to-environment --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 322.5,
      "y": 536,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "5b613472.09fcdc",
      "type": "bigexec",
      "z": "a1cb3587.05ca68",
      "name": "",
      "command": "/home/pm2user/canzea.sh",
      "commandArgs": "",
      "minError": 1,
      "minWarning": 1,
      "cwd": "/home/pm2user/.ecosystem-catalog/catalog",
      "shell": "",
      "extraArgumentProperty": "",
      "envProperty": "",
      "format": "utf8",
      "limiter": true,
      "payloadIs": "argumentNoStdin",
      "x": 694.5,
      "y": 501,
      "wires": [
        [
          "c9bc3421.f55bd8"
        ],
        [
          "9feb67be.1e39d8"
        ],
        [

        ]
      ]
    },
    {
      "id": "4d099c74.66e8b4",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Prepare SCHEDULE",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"name\": pl.pipelineName\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=schedule --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 297.5,
      "y": 384,
      "wires": [
        [
          "cb41efdc.c4c9b"
        ]
      ]
    },
    {
      "id": "cb41efdc.c4c9b",
      "type": "bigexec",
      "z": "a1cb3587.05ca68",
      "name": "",
      "command": "/home/pm2user/canzea.sh",
      "commandArgs": "",
      "minError": 1,
      "minWarning": 1,
      "cwd": "/home/pm2user/.ecosystem-catalog/catalog",
      "shell": "",
      "extraArgumentProperty": "",
      "envProperty": "",
      "format": "utf8",
      "limiter": true,
      "payloadIs": "argumentNoStdin",
      "x": 484.5,
      "y": 386,
      "wires": [
        [

        ],
        [
          "9feb67be.1e39d8"
        ],
        [

        ]
      ]
    },
    {
      "id": "eac99bac.c14ee8",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "prepare-for-build",
      "func": "pl = msg.payload;\n\nargs = {\n    \"type\": pl.type,\n    \"name\": pl.name,\n    \"version\": pl.version,\n    \"qualifier\":\"N\", \n    \"N\":{\n        \"pattern\":\"Build\",\n        \"name\": pl.pipelineName\n    }, \n    \"localUrl\": pl.url,\n    \"localBranch\": pl.branch\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = [\n    \"--lifecycle=wire\",\n    \"--solution=gocd\",\n    \"--action=update-pipeline-for-build\",\n    \"--args='\" + argsString + \"'\"].join(' ');\n\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 290,
      "y": 159,
      "wires": [
        [
          "ec0f5e65.28ec4"
        ]
      ]
    },
    {
      "id": "ec0f5e65.28ec4",
      "type": "bigexec",
      "z": "a1cb3587.05ca68",
      "name": "",
      "command": "/home/pm2user/canzea.sh",
      "commandArgs": "",
      "minError": 1,
      "minWarning": 1,
      "cwd": "/home/pm2user/.ecosystem-catalog/catalog",
      "shell": "",
      "extraArgumentProperty": "",
      "envProperty": "",
      "format": "utf8",
      "limiter": true,
      "payloadIs": "argumentNoStdin",
      "x": 533,
      "y": 191,
      "wires": [
        [

        ],
        [
          "9feb67be.1e39d8"
        ],
        [

        ]
      ]
    },
    {
      "id": "68568a1e.58a984",
      "type": "switch",
      "z": "a1cb3587.05ca68",
      "name": "",
      "property": "topic",
      "propertyType": "msg",
      "rules": [
        {
          "t": "eq",
          "v": "prepare-for-deploy",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "prepare-for-build",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "create-build-pipeline",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "create-deploy-pipeline",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "unpause",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "schedule",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "get-pipeline",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "get-environment",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "add-pipeline-to-environment",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "save-environment",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "enable-agent",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "disable-agent",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "link-agent-to-environment",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "unlink-agent-from-environment",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "delete-agent",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "plus:pipeline_environment",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "minus:pipeline_environment",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "plus:pipeline_pipeline",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "minus:pipeline_pipeline",
          "vt": "str"
        },
        {
          "t": "eq",
          "v": "unlink-pipeline-from-environment",
          "vt": "str"
        },
        {
          "t": "else"
        }
      ],
      "checkall": "false",
      "outputs": 21,
      "x": 66,
      "y": 238,
      "wires": [
        [
          "bb42f351.29665"
        ],
        [
          "eac99bac.c14ee8"
        ],
        [
          "28da27c6.08b1d8"
        ],
        [
          "c5dd1680.b940f8"
        ],
        [
          "79cc2dd2.2e9744"
        ],
        [
          "4d099c74.66e8b4"
        ],
        [
          "5ca32374.a6013c"
        ],
        [
          "b426554a.f6fee8"
        ],
        [
          "cc918e27.33987"
        ],
        [
          "921157ec.f93fd8"
        ],
        [
          "5e74494e.dc0638"
        ],
        [
          "10776d95.1dd122"
        ],
        [
          "cee840ab.17eb7"
        ],
        [
          "7d0cb397.7fdecc"
        ],
        [
          "ca2ae57c.01b738"
        ],
        [
          "8481ad6b.e380e"
        ],
        [
          "99cf1bde.3fd588"
        ],
        [
          "db80eee6.42424",
          "9381935.5677b7"
        ],
        [
          "db80eee6.42424"
        ],
        [
          "963cfeb0.49032"
        ],
        [
          "6a21d3e1.de7c0c"
        ]
      ]
    },
    {
      "id": "6ec8b063.eb31a",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Success",
      "func": "msg.payload = '';\nmsg.statusCode = 200;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 865,
      "y": 289,
      "wires": [
        [

        ]
      ]
    },
    {
      "id": "c82394d4.3bd098",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Error",
      "func": "msg.statusCode = 400;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 855.5,
      "y": 327,
      "wires": [
        [

        ]
      ]
    },
    {
      "id": "20839f2d.dca2c",
      "type": "catch",
      "z": "a1cb3587.05ca68",
      "name": "",
      "scope": null,
      "x": 760,
      "y": 386,
      "wires": [
        [
          "62f08c58.9168b4",
          "85db0135.02b9e"
        ]
      ]
    },
    {
      "id": "62f08c58.9168b4",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Error",
      "func": "msg.payload = {\n    \"error\": msg.message\n};\nmsg.statusCode = 400;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 934.5,
      "y": 457,
      "wires": [
        [

        ]
      ]
    },
    {
      "id": "6a21d3e1.de7c0c",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Error",
      "func": "msg.payload = 'Undefined topic' + msg.topic;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 263,
      "y": 696,
      "wires": [
        [

        ]
      ]
    },
    {
      "id": "dd651a31.1779b8",
      "type": "debug",
      "z": "a1cb3587.05ca68",
      "name": "",
      "active": true,
      "console": "false",
      "complete": "true",
      "x": 1164.5,
      "y": 334,
      "wires": [

      ]
    },
    {
      "id": "bb42f351.29665",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "prepare-for-deploy",
      "func": "pl = msg.payload;\n\nargs = {\n    \"name\": pl.component,\n    \"version\": pl.version,\n    \"branch\" : pl.branch,\n    \"qualifier\":\"N\", \n    \"N\":{\n        \"pattern\":\"Deploy\",\n        \"name\": pl.pipelineName\n    }, \n    \"localUrl\": pl.url,\n    \"localBranch\": pl.branch,\n    \"build_pipeline\": pl.build_pipeline,\n    \"port\":pl.port,\n    \"env\":\"prod\"\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = [\n    \"--lifecycle=wire\",\n    \"--solution=gocd\",\n    \"--action=update-pipeline-for-deploy\",\n    \"--args='\" + argsString + \"'\"].join(' ');\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 281,
      "y": 100,
      "wires": [
        [
          "ec0f5e65.28ec4"
        ]
      ]
    },
    {
      "id": "c5dd1680.b940f8",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "create-deploy-pipeline",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\":\"pipelines\",\n        \"name\": pl.pipelineName\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=post-object --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 291,
      "y": 295,
      "wires": [
        [
          "9ad44d91.13f87"
        ]
      ]
    },
    {
      "id": "b426554a.f6fee8",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Prepare Get Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\":\"environments\",\n        \"name\":pl.environment,\n        \"version\": 2\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=get-admin-object --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 312,
      "y": 491,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "921157ec.f93fd8",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Prepare Save Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"qualifier\": \"A\",\n    \"A\": {\n        \"type\":\"environments\",\n        \"name\":pl.environment\n    }\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=put-admin-object --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 322,
      "y": 576,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "c9bc3421.f55bd8",
      "type": "debug",
      "z": "a1cb3587.05ca68",
      "name": "",
      "active": true,
      "console": "false",
      "complete": "false",
      "x": 873.5,
      "y": 513,
      "wires": [

      ]
    },
    {
      "id": "5e74494e.dc0638",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Enable Agent",
      "func": "pl = msg.payload;\n\nargs = {\n    \"agent\": pl.agent\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=combined/enable-agent --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 270,
      "y": 741,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "85db0135.02b9e",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "",
      "func": "msg.flow = 'GoCD Pipeline';\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 1017.5,
      "y": 339,
      "wires": [
        [
          "dd651a31.1779b8"
        ]
      ]
    },
    {
      "id": "cee840ab.17eb7",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Link Agent to Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"environment\": pl.environment,\n    \"agent\": pl.agent\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\\\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=combined/add-agent-to-env --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 313,
      "y": 789,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "7d0cb397.7fdecc",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Unlink Agent from Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"environment\": pl.environment,\n    \"agent\": pl.agent\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\\\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=combined/unlink-agent-from-environment --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 320,
      "y": 831.25,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "ca2ae57c.01b738",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Delete Agent",
      "func": "pl = msg.payload;\n\nargs = {\n    \"environment\": pl.environment,\n    \"agent\": pl.agent\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=combined/delete-agent --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 263.75,
      "y": 870,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "8481ad6b.e380e",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Create Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"name\": msg.key\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args), '\"', '\"');\n\n//argsString = JSON.stringify(args);\n\nnode.warn(\"Arg String : \" +argsString);\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=create-environment --args='\" + argsString + \"'\";\n\nnode.warn(\"Payload : \" + msg.payload);\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 301,
      "y": 622,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "99cf1bde.3fd588",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Delete Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"type\": \"environments\",\n    \"name\": msg.key,\n    \"qualifier\": \"N/A\"\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args), '\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=delete-object --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 292,
      "y": 654,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "10776d95.1dd122",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Disable Agent",
      "func": "pl = msg.payload;\n\nargs = {\n    \"agent\": pl.agent\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=combined/disable-agent --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 278,
      "y": 768,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "963cfeb0.49032",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "Unlink Pipeline from Environment",
      "func": "pl = msg.payload;\n\nargs = {\n    \"environment\": pl.environment,\n    \"pipeline\": pl.pipeline\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\\\"');\n\nmsg.payload = \"--lifecycle=wire --solution=gocd --action=combined/unlink-pipeline-from-environment --args='\" + argsString + \"'\";\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 334,
      "y": 955,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "862cd383.bbfce",
      "type": "function",
      "z": "a1cb3587.05ca68",
      "name": "prepare-for-build",
      "func": "pl = msg.payload;\n\nargs = {\n    \"type\": pl.type,\n    \"name\": pl.name,\n    \"version\": pl.version,\n    \"qualifier\":\"N\", \n    \"N\":{\n        \"pattern\":\"Build\",\n        \"name\": msg.key\n    }, \n    \"localUrl\": pl.url,\n    \"localBranch\": pl.branch\n};\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n\nargsString = replaceAll(JSON.stringify(args),'\"', '\"');\n\nmsg.payload = [\n    \"--lifecycle=wire\",\n    \"--solution=gocd\",\n    \"--action=combined/add-pipeline\",\n    \"--args='\" + argsString + \"'\"].join(' ');\n\n\nreturn msg;\n\n",
      "outputs": "1",
      "noerr": 0,
      "x": 312,
      "y": 1043,
      "wires": [
        [
          "5b613472.09fcdc"
        ]
      ]
    },
    {
      "id": "db80eee6.42424",
      "type": "subflow:109c70f5.f87c1f",
      "z": "a1cb3587.05ca68",
      "name": "",
      "x": 596.5,
      "y": 58,
      "wires": [
        [

        ]
      ],
      "subflow": "109c70f5.f87c1f"
    },
    {
      "id": "9381935.5677b7",
      "type": "debug",
      "z": "a1cb3587.05ca68",
      "name": "",
      "active": true,
      "console": "false",
      "complete": "false",
      "x": 310.5,
      "y": 46,
      "wires": [

      ]
    }
  ]
}
